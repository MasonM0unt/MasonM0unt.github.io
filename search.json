[{"title":"Hello World","url":"/2022-01-13-hello-world.html","content":"<p>记录一个博客的破壳</p>\n"},{"title":"php基础","url":"/2022-01-29-php%E5%9F%BA%E7%A1%80.html","content":"<p>使用phpstudy：（路径：D:\\phpstudy_pro\\WWW）</p>\n<p>127.0.0.1：</p>\n<p>​    默认访问phpstudy自带的index.html</p>\n<p>127.0.0.1/文件名：</p>\n<p>​    访问自建的在WWW目录下的文件</p>\n","tags":["-学习记录 -php -新手向"]},{"title":"避坑指南——修改hexo主题的图片路径问题","url":"/2022-01-19-%E9%81%BF%E5%9D%91%E6%8C%87%E5%8D%97%E2%80%94%E2%80%94%E4%BF%AE%E6%94%B9hexo%E4%B8%BB%E9%A2%98%E7%9A%84%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98.html","content":"\n        <h1 id=\"前言\">\n          <a href=\"#前言\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a><strong>前言</strong></h1>\n      <p>搭好博客只花了两天，然后想选一个自己喜欢的hexo主题美化一下，没想到更改了头像（avatar）和背景图片后竟然无法显示，网上的解决方法几乎全部尝试了一遍，花了四五天的时间终于弄好了，在这期间走了不少弯路，所以就总结了一篇避坑指南，旨在分享给一些有同样问题的hexo入门新手。</p>\n<p>PS:本文旨在避坑，一些步骤在网上有非常多的教程，在这里就一笔带过~</p>\n\n        <h1 id=\"问题来源\">\n          <a href=\"#问题来源\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#问题来源\" class=\"headerlink\" title=\"问题来源\"></a><strong>问题来源</strong></h1>\n      <p>我们要修改hexo主题里的图片，需要进入主题目录下的配置文件_config，在里面填入自己图片的url：</p>\n<figure class=\"highlight plaintext\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">avatar:</span><br><span class=\"line\">    url: xxxxxx</span><br></pre></td></tr></table></div></figure>\n\n<p>网上有的教程说填相对路径，即本机放图片的文件夹位置，这种说法完全<strong>错误！</strong></p>\n<p>照这样做的话，只有在localhosat：4000本地运行才有效，部署到云端页面会发现图片是无法显示的。</p>\n\n        <h1 id=\"解决方法\">\n          <a href=\"#解决方法\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a><strong>解决方法</strong></h1>\n      <p>在网上查找了非常多方法之后，终于总结出了适合新手且泛用性强、持久性好的解决思路：</p>\n<p><strong>GitHub自建图床+jsDelivr加速+PicGo图片上传</strong></p>\n<p>图床、jsDelivr的概念及作用可以自行了解，此处不加赘述，另外，PicGo这款软件需提前下载好备用。</p>\n\n        <h1 id=\"具体步骤\">\n          <a href=\"#具体步骤\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#具体步骤\" class=\"headerlink\" title=\"具体步骤\"></a><strong>具体步骤</strong></h1>\n      \n        <h2 id=\"GitHub新建仓库用作图床\">\n          <a href=\"#GitHub新建仓库用作图床\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#GitHub新建仓库用作图床\" class=\"headerlink\" title=\"GitHub新建仓库用作图床\"></a>GitHub新建仓库用作图床</h2>\n      <p>这个步骤在网上教程非常多，此处省略，要注意的是不需要像某些教程所说的克隆到本地，因为后面我们会用PicGo来上传图片，同时要记得复制Token备用。</p>\n\n        <h2 id=\"PicGo的图床设置\">\n          <a href=\"#PicGo的图床设置\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#PicGo的图床设置\" class=\"headerlink\" title=\"PicGo的图床设置\"></a>PicGo的图床设置</h2>\n      <p>在PicGo的图床设置里选择GitHub图床，示例如图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220119221206942.png\" alt=\"image-20220119221206942\"></p>\n<p>仓库名：GitHub账户名/用作图床的仓库名</p>\n<p>分支名：默认填main就好</p>\n<p>Token：粘贴刚才复制的Token</p>\n<p>存储路径：如果图片想放在子文件夹，则填文件夹路径</p>\n<p>自定义域名：</p>\n<figure class=\"highlight plaintext\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/gh/GitHub用户名/用作图床的仓库名</span><br></pre></td></tr></table></div></figure>\n\n<p>这个自定义域名，就是主题配置文件里想修改的图片url填的格式。</p>\n<p>修改完设置点击确定即可。</p>\n\n        <h2 id=\"上传图片\">\n          <a href=\"#上传图片\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#上传图片\" class=\"headerlink\" title=\"上传图片\"></a>上传图片</h2>\n      <p>我们点击上传区：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220119220208590.png\" alt=\"image-20220119220208590\"></p>\n<p>注意下方链接格式要选择URL，然后拖动我们想要的图片就可以上传了。</p>\n<p>上传完成后，我们可以在“相册”里面查看图片并复制url链接，然后回到主题配置文件里面粘贴：</p>\n<figure class=\"highlight plaintext\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">avatar:</span><br><span class=\"line\">    url: https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/touxiang.JPG</span><br></pre></td></tr></table></div></figure>\n\n<p>至此，我们自定义主题里的图片就完成啦！</p>\n","tags":["博客搭建","学习记录","新手向"]},{"title":"计算机网络","url":"/2022-06-18-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0.html","content":"\n        <h1 id=\"GSM网络结构\">\n          <a href=\"#GSM网络结构\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#GSM网络结构\" class=\"headerlink\" title=\"GSM网络结构\"></a>GSM网络结构</h1>\n      <p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617151909955.png\" alt=\"image-20220617151909955\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617153720016.png\" alt=\"image-20220617153720016\"></p>\n<p>MS- Mobile Station (移动台)<br>BSS-Base Station System (基站系统)<br>BTS-Base Transceiver Station (基站收发台）可把它看成是一个无线解调器。简单的说，它也是一个天线，接收手机发出的信号，同时也向手机发出信号。它完全由BSC控制，主要负责无线传输，完成无线与有线的转换、无线分集、无线信道加密、跳频等功能。<br>BSC-Base Station Controller (基站控制器)具有对一个或多个BTS进行控制的功能，它主要负责无线网路资源的管理、小区配置数据管理、功率控制、定位和切换等，是个很强的业务控制点BSC通过BTS和MS来管理信道的分配，释放及切换。一个BSC一端连接着几个BTS,另一端连接MSC。BSC和BTS合起来叫基站子系统。<br>    MSC-Mobile Switching Center (移动业务交换中心)移动业务交换中心，它是GSM网络的心脏，主要功能是协调呼叫GSM用户和来自GSM用户的呼叫。<br>      同时，它通过一些设备和其它网络相连，例如与固定电话相连。<br>   OMC-Operations and Maintenance Center(操作与维护中心)对整个GSM网路进行管理和监控。通过它实现对GSM网内各种部件功能的监视、状态报告、故障诊断等功能。NMC-Network Management Center (网络管理中心)<br>AUC-Authentication Center (鉴权中心)鉴权中心,它是HLR功能的一部份，它的作用是检测用户的权限和判断用户是否是合法的用户。<br>HLR-Home Location Register (归属位置寄存器)存储管理部门用于移动客户管理的数据，它主要存储两类信息：一是有关客户的参数；二是有关客户目前所处位置的信息，以便建立至移动台的呼叫路由 。<br>VLR-Visitors Location Register  (来访位置寄存器)来访位置寄存器,是一个数据库，是存储MSC,为了处理所管辖区域中MS（统称拜访客户）的来话、去话呼叫所需检索的信息。<br>EIR-Equipment Identity Register (设备标识寄存器)存储有关移动台设备参数。主要完成对移动设备的识别、监视、闭锁等功能，以防止非法移动台的使用。</p>\n<p>PSTN-公共电话交换网</p>\n\n        <h2 id=\"Subscriber-Identity-Module-SIM\">\n          <a href=\"#Subscriber-Identity-Module-SIM\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#Subscriber-Identity-Module-SIM\" class=\"headerlink\" title=\"Subscriber Identity Module ( SIM)\"></a>Subscriber Identity Module ( SIM)</h2>\n      <p>​        SIM 卡即个人用户识别卡,是全球通数字移动电话的一张个人资料卡,储存着用户的数据,鉴权方法及密钥,可供GSM系统对用户身份进行鉴别.同时,用户通过它完成与系统的连接和信息的交换.<br>​      SIM卡有大小之分,我们现在都用小卡,它长25mm,宽15mm.<br>​      SIM卡可以插入任何一部符合GSM规范的移动电话中,而话费则自动计人持卡用户的帐单上,与移动台无关.</p>\n<p>SIM卡号含义:<br>        前六位(898600):为中国的代号<br>        第七位:业务接入号,对应于135,136,138, 139的5,6,8,9<br>        第八位:SIM卡功能位,一般为零<br>        第九,十位:各省的编码<br>        第十一,十二位:年号<br>        第十三位:供应商代码<br>        第十四到十九位:用户识别码<br>        第二十位:校验位    </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152112479.png\" alt=\"image-20220617152112479\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152132169.png\" alt=\"image-20220617152132169\"></p>\n<ul>\n<li>4-8位PIN码</li>\n<li>3位伪登陆区</li>\n<li>8位PUK码</li>\n<li>10位伪登陆不可用区</li>\n</ul>\n<p>SIM卡的内容：</p>\n<ul>\n<li>手机串号</li>\n<li>IMSI，用户密匙</li>\n<li>鉴权，加密算法</li>\n<li>网络码</li>\n<li>PIN,PUK</li>\n<li>计费信息</li>\n<li>日常缩写</li>\n<li>附加功能</li>\n</ul>\n<p>SIM卡的结构和类型 ：<br>　　SIM卡是带有微处理器的智能芯片卡，它的构成是以下几个模块： </p>\n<p>— CPU </p>\n<p>— 程序存储器(ROM) </p>\n<p>— 工作存储器(RAM) </p>\n<p>— 数据存储器(EPROM或E2PROM) </p>\n<p>— 串行通信单元 </p>\n<p>　　这五个模块必须集成在一块集成电路中，否则其安全性会受到威胁。因为，芯片间的连线可能成为非法存取和盗用SIM卡的重要线索。</p>\n<p>SIM卡的软件特性<br>　　SIM卡采用新的单片机及存储器管理结构，因此处理功能大大增强。SIM卡中存有三类数据信息：<br>　　与持卡者相关的信息以及SIM卡将来准备提供的所有业务信息，这种类型的数据存储在根目录下。 </p>\n<p>　　1）GSM应用中特有的信息，这种类型的数据存储在GSM目录下。 </p>\n<p>　　2）GSM应用所使用的信息，此信息可与其它电信应用或业务共享，位于电信目录下。</p>\n<p>其详细结构如下：</p>\n<p>3．SIM卡中的保密算法及密钥：</p>\n<p>　　SIM卡中最敏感的数据是保密算法A3、A8算法、密约Ki、PIN、PUK和Kc。A3、A8算法是在生产SIM卡的同时写入的，一般人都无法读A3、A8算法；PIN码可由客户在手机上自己设定；PUK码由运营者持有；Kc是在加密过程中由Ki导出；Ki需要根据客户的IMSI和写卡时用的母钥(Kki)，由运营部门提供的一种高级算法DES，即Ki＝DES(IMSI，Kki)，经写卡机产生并写入SIM卡中，同时要将IMSI、Ki这一对数据送入GSM网路单元AUC鉴权中心。<br>　　如何保证Ki在传送过程中安全保密是一件非常重要的事情。Ki在写卡时生成，同时加密，然后进入HLR／AUC后再解密，那么连写卡和HLR／AUC的操作人员也不知道Ki的真实数据。 </p>\n\n        <h2 id=\"SIM卡\">\n          <a href=\"#SIM卡\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#SIM卡\" class=\"headerlink\" title=\"SIM卡\"></a>SIM卡</h2>\n      <p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152508819.png\" alt=\"image-20220617152508819\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152531942.png\" alt=\"image-20220617152531942\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152342231.png\" alt=\"image-20220617152342231\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152401728.png\" alt=\"image-20220617152401728\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152444749.png\" alt=\"image-20220617152444749\"></p>\n<p>保密算法：A3，A5，A8，由制造商生产SIM卡时写入，算法保密，由运营商掌握；<br>密钥Ki和Kc，Ki由运营商写入，Kc加密过程中由Ki导出，实际通信过程中使用Kc来进行加密；<br>Ki生成及写入SIM过程：</p>\n<ul>\n<li>Ki由运营商选择一种高级算法DES，以用户IMSI和母密钥Kki计算Ki=DES(IMSI,Kki)；</li>\n<li>Ki写在SIM卡中，同时也要传送AUC；在GSM中，先将Ki利用安全算法DES和加密密钥Kdes对Ki进行加密（写卡过程）</li>\n<li>密文传送给AUC/HLR，然后用Kdes解密，得到Ki（运营商开卡）</li>\n<li>保护Ki的关键在于运营商保护密钥Kdes</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152602395.png\" alt=\"image-20220617152602395\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152619923.png\" alt=\"image-20220617152619923\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152639712.png\" alt=\"image-20220617152639712\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152703473.png\" alt=\"image-20220617152703473\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152721234.png\" alt=\"image-20220617152721234\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152800561.png\"></p>\n\n        <h2 id=\"3G\">\n          <a href=\"#3G\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#3G\" class=\"headerlink\" title=\"3G\"></a>3G</h2>\n      <ul>\n<li>第三代移动通信的提出<br>IMT-2000是第三代移动通信系统（3G）的统称</li>\n<li>第三代移动通信系统最早由国际电信联盟（ITU）1985年提 出，1996年正式更名为IMT-2000（International Mobile Telecommunication-2000）<ul>\n<li>原计划该系统于 2000年左右商用</li>\n<li>工作的频段在2000MHz（2.1GHz）</li>\n<li>最高业务速率为 2000Kbps（2Mbps）</li>\n</ul>\n</li>\n</ul>\n<p>鉴权参数五元组:<br>●RAND<br>●XRES<br>●AUTN<br>●CK<br>●IK</p>\n<p>2G鉴权3元组：</p>\n<ul>\n<li>RAND（Random Number）</li>\n<li>SRES( SignedResponse)</li>\n<li>Kc( Ciphering Key)</li>\n</ul>\n\n        <h1 id=\"云计算-amp-大数据-amp-区块链\">\n          <a href=\"#云计算-amp-大数据-amp-区块链\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#云计算-amp-大数据-amp-区块链\" class=\"headerlink\" title=\"云计算&amp;大数据&amp;区块链\"></a>云计算&amp;大数据&amp;区块链</h1>\n      <p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617154940321.png\" alt=\"image-20220617154940321\"></p>\n\n        <h2 id=\"GFS\">\n          <a href=\"#GFS\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#GFS\" class=\"headerlink\" title=\"GFS\"></a>GFS</h2>\n      <p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617175653207.png\" alt=\"image-20220617175653207\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617175704047.png\" alt=\"image-20220617175704047\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617175750946.png\" alt=\"image-20220617175750946\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617175841033.png\" alt=\"image-20220617175841033\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617204404070.png\" alt=\"image-20220617204404070\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617204427967.png\" alt=\"image-20220617204427967\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617204503417.png\" alt=\"image-20220617204503417\"></p>\n\n        <h2 id=\"分布式计算-MapReduce\">\n          <a href=\"#分布式计算-MapReduce\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#分布式计算-MapReduce\" class=\"headerlink\" title=\"分布式计算 MapReduce\"></a>分布式计算 MapReduce</h2>\n      <p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617210350027.png\" alt=\"image-20220617210350027\"></p>\n","tags":["复习"]}]