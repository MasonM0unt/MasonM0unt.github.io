[{"title":"Hello World","url":"/2022-01-13-hello-world.html","content":"<p>记录一个博客的破壳</p>\n"},{"title":"php基础","url":"/2022-01-29-php%E5%9F%BA%E7%A1%80.html","content":"<p>使用phpstudy：（路径：D:\\phpstudy_pro\\WWW）</p>\n<p>127.0.0.1：</p>\n<p>​    默认访问phpstudy自带的index.html</p>\n<p>127.0.0.1/文件名：</p>\n<p>​    访问自建的在WWW目录下的文件</p>\n","tags":["学习记录","php","新手向"]},{"title":"避坑指南——修改hexo主题的图片路径问题","url":"/2022-01-19-%E9%81%BF%E5%9D%91%E6%8C%87%E5%8D%97%E2%80%94%E2%80%94%E4%BF%AE%E6%94%B9hexo%E4%B8%BB%E9%A2%98%E7%9A%84%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98.html","content":"\n        <h1 id=\"前言\">\n          <a href=\"#前言\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a><strong>前言</strong></h1>\n      <p>搭好博客只花了两天，然后想选一个自己喜欢的hexo主题美化一下，没想到更改了头像（avatar）和背景图片后竟然无法显示，网上的解决方法几乎全部尝试了一遍，花了四五天的时间终于弄好了，在这期间走了不少弯路，所以就总结了一篇避坑指南，旨在分享给一些有同样问题的hexo入门新手。</p>\n<p>PS:本文旨在避坑，一些步骤在网上有非常多的教程，在这里就一笔带过~</p>\n\n        <h1 id=\"问题来源\">\n          <a href=\"#问题来源\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#问题来源\" class=\"headerlink\" title=\"问题来源\"></a><strong>问题来源</strong></h1>\n      <p>我们要修改hexo主题里的图片，需要进入主题目录下的配置文件_config，在里面填入自己图片的url：</p>\n<figure class=\"highlight plaintext\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">avatar:</span><br><span class=\"line\">    url: xxxxxx</span><br></pre></td></tr></table></div></figure>\n\n<p>网上有的教程说填相对路径，即本机放图片的文件夹位置，这种说法完全<strong>错误！</strong></p>\n<p>照这样做的话，只有在localhosat：4000本地运行才有效，部署到云端页面会发现图片是无法显示的。</p>\n\n        <h1 id=\"解决方法\">\n          <a href=\"#解决方法\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a><strong>解决方法</strong></h1>\n      <p>在网上查找了非常多方法之后，终于总结出了适合新手且泛用性强、持久性好的解决思路：</p>\n<p><strong>GitHub自建图床+jsDelivr加速+PicGo图片上传</strong></p>\n<p>图床、jsDelivr的概念及作用可以自行了解，此处不加赘述，另外，PicGo这款软件需提前下载好备用。</p>\n\n        <h1 id=\"具体步骤\">\n          <a href=\"#具体步骤\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#具体步骤\" class=\"headerlink\" title=\"具体步骤\"></a><strong>具体步骤</strong></h1>\n      \n        <h2 id=\"GitHub新建仓库用作图床\">\n          <a href=\"#GitHub新建仓库用作图床\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#GitHub新建仓库用作图床\" class=\"headerlink\" title=\"GitHub新建仓库用作图床\"></a>GitHub新建仓库用作图床</h2>\n      <p>这个步骤在网上教程非常多，此处省略，要注意的是不需要像某些教程所说的克隆到本地，因为后面我们会用PicGo来上传图片，同时要记得复制Token备用。</p>\n\n        <h2 id=\"PicGo的图床设置\">\n          <a href=\"#PicGo的图床设置\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#PicGo的图床设置\" class=\"headerlink\" title=\"PicGo的图床设置\"></a>PicGo的图床设置</h2>\n      <p>在PicGo的图床设置里选择GitHub图床，示例如图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220119221206942.png\" alt=\"image-20220119221206942\"></p>\n<p>仓库名：GitHub账户名/用作图床的仓库名</p>\n<p>分支名：默认填main就好</p>\n<p>Token：粘贴刚才复制的Token</p>\n<p>存储路径：如果图片想放在子文件夹，则填文件夹路径</p>\n<p>自定义域名：</p>\n<figure class=\"highlight plaintext\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/gh/GitHub用户名/用作图床的仓库名</span><br></pre></td></tr></table></div></figure>\n\n<p>这个自定义域名，就是主题配置文件里想修改的图片url填的格式。</p>\n<p>修改完设置点击确定即可。</p>\n\n        <h2 id=\"上传图片\">\n          <a href=\"#上传图片\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#上传图片\" class=\"headerlink\" title=\"上传图片\"></a>上传图片</h2>\n      <p>我们点击上传区：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220119220208590.png\" alt=\"image-20220119220208590\"></p>\n<p>注意下方链接格式要选择URL，然后拖动我们想要的图片就可以上传了。</p>\n<p>上传完成后，我们可以在“相册”里面查看图片并复制url链接，然后回到主题配置文件里面粘贴：</p>\n<figure class=\"highlight plaintext\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">avatar:</span><br><span class=\"line\">    url: https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/touxiang.JPG</span><br></pre></td></tr></table></div></figure>\n\n<p>至此，我们自定义主题里的图片就完成啦！</p>\n","tags":["学习记录","新手向","博客搭建"]},{"title":"计算机网络","url":"/2022-06-18-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0.html","content":"\n        <h1 id=\"GSM网络结构\">\n          <a href=\"#GSM网络结构\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#GSM网络结构\" class=\"headerlink\" title=\"GSM网络结构\"></a>GSM网络结构</h1>\n      <p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617151909955.png\" alt=\"image-20220617151909955\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617153720016.png\" alt=\"image-20220617153720016\"></p>\n<p>MS- Mobile Station (移动台)<br>BSS-Base Station System (基站系统)<br>BTS-Base Transceiver Station (基站收发台）可把它看成是一个无线解调器。简单的说，它也是一个天线，接收手机发出的信号，同时也向手机发出信号。它完全由BSC控制，主要负责无线传输，完成无线与有线的转换、无线分集、无线信道加密、跳频等功能。<br>BSC-Base Station Controller (基站控制器)具有对一个或多个BTS进行控制的功能，它主要负责无线网路资源的管理、小区配置数据管理、功率控制、定位和切换等，是个很强的业务控制点BSC通过BTS和MS来管理信道的分配，释放及切换。一个BSC一端连接着几个BTS,另一端连接MSC。BSC和BTS合起来叫基站子系统。<br>    MSC-Mobile Switching Center (移动业务交换中心)移动业务交换中心，它是GSM网络的心脏，主要功能是协调呼叫GSM用户和来自GSM用户的呼叫。<br>      同时，它通过一些设备和其它网络相连，例如与固定电话相连。<br>   OMC-Operations and Maintenance Center(操作与维护中心)对整个GSM网路进行管理和监控。通过它实现对GSM网内各种部件功能的监视、状态报告、故障诊断等功能。NMC-Network Management Center (网络管理中心)<br>AUC-Authentication Center (鉴权中心)鉴权中心,它是HLR功能的一部份，它的作用是检测用户的权限和判断用户是否是合法的用户。<br>HLR-Home Location Register (归属位置寄存器)存储管理部门用于移动客户管理的数据，它主要存储两类信息：一是有关客户的参数；二是有关客户目前所处位置的信息，以便建立至移动台的呼叫路由 。<br>VLR-Visitors Location Register  (来访位置寄存器)来访位置寄存器,是一个数据库，是存储MSC,为了处理所管辖区域中MS（统称拜访客户）的来话、去话呼叫所需检索的信息。<br>EIR-Equipment Identity Register (设备标识寄存器)存储有关移动台设备参数。主要完成对移动设备的识别、监视、闭锁等功能，以防止非法移动台的使用。</p>\n<p>PSTN-公共电话交换网</p>\n\n        <h2 id=\"Subscriber-Identity-Module-SIM\">\n          <a href=\"#Subscriber-Identity-Module-SIM\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#Subscriber-Identity-Module-SIM\" class=\"headerlink\" title=\"Subscriber Identity Module ( SIM)\"></a>Subscriber Identity Module ( SIM)</h2>\n      <p>​        SIM 卡即个人用户识别卡,是全球通数字移动电话的一张个人资料卡,储存着用户的数据,鉴权方法及密钥,可供GSM系统对用户身份进行鉴别.同时,用户通过它完成与系统的连接和信息的交换.<br>​      SIM卡有大小之分,我们现在都用小卡,它长25mm,宽15mm.<br>​      SIM卡可以插入任何一部符合GSM规范的移动电话中,而话费则自动计人持卡用户的帐单上,与移动台无关.</p>\n<p>SIM卡号含义:<br>        前六位(898600):为中国的代号<br>        第七位:业务接入号,对应于135,136,138, 139的5,6,8,9<br>        第八位:SIM卡功能位,一般为零<br>        第九,十位:各省的编码<br>        第十一,十二位:年号<br>        第十三位:供应商代码<br>        第十四到十九位:用户识别码<br>        第二十位:校验位    </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152112479.png\" alt=\"image-20220617152112479\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152132169.png\" alt=\"image-20220617152132169\"></p>\n<ul>\n<li>4-8位PIN码</li>\n<li>3位伪登陆区</li>\n<li>8位PUK码</li>\n<li>10位伪登陆不可用区</li>\n</ul>\n<p>SIM卡的内容：</p>\n<ul>\n<li>手机串号</li>\n<li>IMSI，用户密匙</li>\n<li>鉴权，加密算法</li>\n<li>网络码</li>\n<li>PIN,PUK</li>\n<li>计费信息</li>\n<li>日常缩写</li>\n<li>附加功能</li>\n</ul>\n<p>SIM卡的结构和类型 ：<br>　　SIM卡是带有微处理器的智能芯片卡，它的构成是以下几个模块： </p>\n<p>— CPU </p>\n<p>— 程序存储器(ROM) </p>\n<p>— 工作存储器(RAM) </p>\n<p>— 数据存储器(EPROM或E2PROM) </p>\n<p>— 串行通信单元 </p>\n<p>　　这五个模块必须集成在一块集成电路中，否则其安全性会受到威胁。因为，芯片间的连线可能成为非法存取和盗用SIM卡的重要线索。</p>\n<p>SIM卡的软件特性<br>　　SIM卡采用新的单片机及存储器管理结构，因此处理功能大大增强。SIM卡中存有三类数据信息：<br>　　与持卡者相关的信息以及SIM卡将来准备提供的所有业务信息，这种类型的数据存储在根目录下。 </p>\n<p>　　1）GSM应用中特有的信息，这种类型的数据存储在GSM目录下。 </p>\n<p>　　2）GSM应用所使用的信息，此信息可与其它电信应用或业务共享，位于电信目录下。</p>\n<p>其详细结构如下：</p>\n<p>3．SIM卡中的保密算法及密钥：</p>\n<p>　　SIM卡中最敏感的数据是保密算法A3、A8算法、密约Ki、PIN、PUK和Kc。A3、A8算法是在生产SIM卡的同时写入的，一般人都无法读A3、A8算法；PIN码可由客户在手机上自己设定；PUK码由运营者持有；Kc是在加密过程中由Ki导出；Ki需要根据客户的IMSI和写卡时用的母钥(Kki)，由运营部门提供的一种高级算法DES，即Ki＝DES(IMSI，Kki)，经写卡机产生并写入SIM卡中，同时要将IMSI、Ki这一对数据送入GSM网路单元AUC鉴权中心。<br>　　如何保证Ki在传送过程中安全保密是一件非常重要的事情。Ki在写卡时生成，同时加密，然后进入HLR／AUC后再解密，那么连写卡和HLR／AUC的操作人员也不知道Ki的真实数据。 </p>\n\n        <h2 id=\"SIM卡\">\n          <a href=\"#SIM卡\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#SIM卡\" class=\"headerlink\" title=\"SIM卡\"></a>SIM卡</h2>\n      <p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152508819.png\" alt=\"image-20220617152508819\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152531942.png\" alt=\"image-20220617152531942\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152342231.png\" alt=\"image-20220617152342231\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152401728.png\" alt=\"image-20220617152401728\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152444749.png\" alt=\"image-20220617152444749\"></p>\n<p>保密算法：A3，A5，A8，由制造商生产SIM卡时写入，算法保密，由运营商掌握；<br>密钥Ki和Kc，Ki由运营商写入，Kc加密过程中由Ki导出，实际通信过程中使用Kc来进行加密；<br>Ki生成及写入SIM过程：</p>\n<ul>\n<li>Ki由运营商选择一种高级算法DES，以用户IMSI和母密钥Kki计算Ki=DES(IMSI,Kki)；</li>\n<li>Ki写在SIM卡中，同时也要传送AUC；在GSM中，先将Ki利用安全算法DES和加密密钥Kdes对Ki进行加密（写卡过程）</li>\n<li>密文传送给AUC/HLR，然后用Kdes解密，得到Ki（运营商开卡）</li>\n<li>保护Ki的关键在于运营商保护密钥Kdes</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152602395.png\" alt=\"image-20220617152602395\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152619923.png\" alt=\"image-20220617152619923\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152639712.png\" alt=\"image-20220617152639712\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152703473.png\" alt=\"image-20220617152703473\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152721234.png\" alt=\"image-20220617152721234\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617152800561.png\"></p>\n\n        <h2 id=\"3G\">\n          <a href=\"#3G\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#3G\" class=\"headerlink\" title=\"3G\"></a>3G</h2>\n      <ul>\n<li>第三代移动通信的提出<br>IMT-2000是第三代移动通信系统（3G）的统称</li>\n<li>第三代移动通信系统最早由国际电信联盟（ITU）1985年提 出，1996年正式更名为IMT-2000（International Mobile Telecommunication-2000）<ul>\n<li>原计划该系统于 2000年左右商用</li>\n<li>工作的频段在2000MHz（2.1GHz）</li>\n<li>最高业务速率为 2000Kbps（2Mbps）</li>\n</ul>\n</li>\n</ul>\n<p>鉴权参数五元组:<br>●RAND<br>●XRES<br>●AUTN<br>●CK<br>●IK</p>\n<p>2G鉴权3元组：</p>\n<ul>\n<li>RAND（Random Number）</li>\n<li>SRES( SignedResponse)</li>\n<li>Kc( Ciphering Key)</li>\n</ul>\n\n        <h1 id=\"云计算-amp-大数据-amp-区块链\">\n          <a href=\"#云计算-amp-大数据-amp-区块链\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#云计算-amp-大数据-amp-区块链\" class=\"headerlink\" title=\"云计算&amp;大数据&amp;区块链\"></a>云计算&amp;大数据&amp;区块链</h1>\n      <p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617154940321.png\" alt=\"image-20220617154940321\"></p>\n\n        <h2 id=\"GFS\">\n          <a href=\"#GFS\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#GFS\" class=\"headerlink\" title=\"GFS\"></a>GFS</h2>\n      <p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617175653207.png\" alt=\"image-20220617175653207\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617175704047.png\" alt=\"image-20220617175704047\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617175750946.png\" alt=\"image-20220617175750946\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617175841033.png\" alt=\"image-20220617175841033\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617204404070.png\" alt=\"image-20220617204404070\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617204427967.png\" alt=\"image-20220617204427967\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617204503417.png\" alt=\"image-20220617204503417\"></p>\n\n        <h2 id=\"分布式计算-MapReduce\">\n          <a href=\"#分布式计算-MapReduce\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#分布式计算-MapReduce\" class=\"headerlink\" title=\"分布式计算 MapReduce\"></a>分布式计算 MapReduce</h2>\n      <p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617210350027.png\" alt=\"image-20220617210350027\"></p>\n\n        <h2 id=\"区块链\">\n          <a href=\"#区块链\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#区块链\" class=\"headerlink\" title=\"区块链\"></a>区块链</h2>\n      <div class=\"table-container\"><table>\n<thead>\n<tr>\n<th><strong>概念</strong></th>\n<th><strong>解释</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>公钥</td>\n<td>相当于账号，全网每个节点都有一个公钥，别人付钱时都是付给这个公钥</td>\n</tr>\n<tr>\n<td>私钥</td>\n<td>相当于你的账号的身份证明，私钥可以解开公钥加密的数据，说明付款方确实是你。私钥必须妥善保存，一旦丢失，就丢失了账户内的所有数据也就是所有财产。</td>\n</tr>\n<tr>\n<td>交易</td>\n<td>节点之间发生的支付就是交易</td>\n</tr>\n<tr>\n<td>区块</td>\n<td>一段时间内的所有交易会打包成一个区块这个区块还会记录上一个区块的hash值，使得上一个区块不可篡改。区块会包含时间戳，这个时间戳解决了“双花”问题，也就是一个货币不能被支付两次，区块链技术中承认时间戳在前的交易的有效性。</td>\n</tr>\n<tr>\n<td>区块链</td>\n<td>由于每个区块都有上一个区块的hash值，造成每生成一个新区快，就会造成老区块的不可篡改，从而形成全部数据的不可篡改。</td>\n</tr>\n<tr>\n<td>记账权/挖矿</td>\n<td>所谓记账权，也就是比特币中的挖矿，其实就是把从上次区块生成后到现在为止的所有交易打包再打上时间戳，向全网公示，51%的节点确认区块有效则该区块就加入到区块链的末端，成为账本的一部分。由于不存在中心，所以记账权是全网争夺的，大家通过计算一道密码学难题，谁先解出来，并获得全网共识，谁就争夺到记账权。因为要鼓励大家参与记账，所以争夺到记账权会有报酬，就是若干比特币。</td>\n</tr>\n<tr>\n<td>共识机制</td>\n<td>就是所有分布式节之间怎么达成共识，通过算法来生成和更新数据，去认定一个记录的有效性，这既是认定的手段，也是防止篡改的手段。以比特币为例，采用的是“工作量证明”（Proof Of Work，简称POW）。工作量是需要算力的，通过工作量证明，有效的防止了篡改和伪造，因为如果要达到伪造和篡改的工作量，大概需要上亿元成本跟的算力。</td>\n</tr>\n</tbody></table></div>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206210046263.png\" alt=\"image-20220621004612132\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211323218.png\" alt=\"image-20220621132357096\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211324790.png\" alt=\"image-20220621132405658\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211324532.png\" alt=\"image-20220621132419428\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211324052.png\" alt=\"image-20220621132452958\"></p>\n\n        <h1 id=\"软件定义网络SDN\">\n          <a href=\"#软件定义网络SDN\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#软件定义网络SDN\" class=\"headerlink\" title=\"软件定义网络SDN\"></a>软件定义网络SDN</h1>\n      <p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211344302.png\" alt=\"image-20220621134425180\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211918319.png\" alt=\"image-20220621191804183\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211920223.png\" alt=\"image-20220621192009079\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211920450.png\" alt=\"image-20220621192051326\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211923051.png\" alt=\"image-20220621192332915\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211923625.png\" alt=\"image-20220621192349575\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211925956.png\" alt=\"image-20220621192539868\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211926735.png\" alt=\"image-20220621192652664\"></p>\n\n        <h1 id=\"无线局域网WLAN\">\n          <a href=\"#无线局域网WLAN\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#无线局域网WLAN\" class=\"headerlink\" title=\"无线局域网WLAN\"></a>无线局域网WLAN</h1>\n      \n        <h2 id=\"SSID\">\n          <a href=\"#SSID\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#SSID\" class=\"headerlink\" title=\"SSID\"></a>SSID</h2>\n      <p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211935024.png\" alt=\"image-20220621193555942\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211936050.png\" alt=\"image-20220621193609946\"></p>\n\n        <h2 id=\"MAC\">\n          <a href=\"#MAC\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#MAC\" class=\"headerlink\" title=\"MAC\"></a>MAC</h2>\n      <p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211938723.png\" alt=\"image-20220621193825649\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211938234.png\" alt=\"image-20220621193838143\"></p>\n\n        <h2 id=\"WEP\">\n          <a href=\"#WEP\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#WEP\" class=\"headerlink\" title=\"WEP\"></a>WEP</h2>\n      <p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211945459.png\" alt=\"image-20220621194537239\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211958940.png\" alt=\"image-20220621195856867\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211957114.png\" alt=\"image-20220621195730735\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211959810.png\" alt=\"image-20220621195912672\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211959130.png\" alt=\"image-20220621195943005\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206212002012.png\" alt=\"image-20220621200212911\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206212002375.png\" alt=\"image-20220621200229249\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206212002754.png\" alt=\"image-20220621200255633\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206212003415.png\" alt=\"image-20220621200317232\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206212003140.png\" alt=\"image-20220621200329048\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206212004152.png\" alt=\"image-20220621200400011\"></p>\n\n        <h2 id=\"802-1X\">\n          <a href=\"#802-1X\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#802-1X\" class=\"headerlink\" title=\"802.1X\"></a>802.1X</h2>\n      <p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206212010638.png\" alt=\"image-20220621201002542\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206212010778.png\" alt=\"image-20220621201039696\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206212012588.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206212013769.png\" alt=\"image-20220621201314558\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206212014108.png\" alt=\"image-20220621201433011\"></p>\n<ul>\n<li>IEEE 802.1X协议实际上一个可扩展的认证框架，并没有规定具体的认证协议，具体采用什么认证协议可由用户自行配置，因此具有较好的灵活性。</li>\n<li>IEEE 802.1X认证过程如下图所示。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206212015302.png\" alt=\"image-20220621201557219\"></p>\n<p>IEEE 802.1X协议的认证过程 </p>\n<ul>\n<li>（1）请求者向认证者发送EAP-Start帧，启动认证流程。</li>\n<li>（2）认证者发出请求，要求请求者提供相关身份信息。</li>\n<li>（3）请求者回应认证者的请求，将自己的相关身份信息发送给认证者。（4）认证者将请求者的身份信息封装至Radius-Access-Request帧中，发送至AS。</li>\n<li>（5）RADIUS服务器验证请求者身份的合法性，在此期间可能需要多次通过认证者与请求者进行信息交互。</li>\n<li>（6）RADIUS服务器告知认证者认证结果。</li>\n<li>（7）认证者向请求者发送认证结果，如果认证通过，那么认证者将为请求者打开一个受控端口，允许请求者访问认证者所提供的服务，反之，则拒绝请求者的访问。</li>\n</ul>\n<p>IEEE 802.1X认证的特点</p>\n<p> IEEE 802.1X协议具有以下优点：</p>\n<ul>\n<li><p>协议实现简单。</p>\n</li>\n<li><p>业务灵活。</p>\n</li>\n<li><p>安全可靠。具体表现在如下几个方面： </p>\n<ul>\n<li><p>用户身份识别取决于用户名或口令，而不是MAC地址，从而可实现基于用户的认证、授权和计费。 </p>\n</li>\n<li><p>支持可扩展的认证、非口令认证，如公钥证书和智能卡、互联网密钥交换协议、生物测定学、信用卡等，同时也支持口令认证，如一次性口令认证、通用安全服务应用编程接口方法。</p>\n</li>\n<li><p>协议的后续版本支持双向认证，可有效防止了中间人攻击和假冒接入点AP，还可防范地址欺骗攻击、目标识别和拒绝服务攻击等，并支持针对每个数据包的认证。并可以在不改变网络接口卡的情况下，插入新的认证方法。</p>\n</li>\n</ul>\n</li>\n</ul>\n\n        <h1 id=\"QoS\">\n          <a href=\"#QoS\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#QoS\" class=\"headerlink\" title=\"QoS\"></a>QoS</h1>\n      <p>QoS（Quality of Service）即服务质量。对于网络业务，服务质量包括传输的带宽、传送的时延、数据的丢包率等，在网络中可以通过保证传输的带宽、降低传送的时延、降低数据的丢包率以及时延抖动等措施来提高服务质量。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206241356495.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206241358035.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206241359959.png\" alt=\"image-20220624135952835\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206241400593.png\" alt=\"image-20220624140038451\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206241401061.png\" alt=\"image-20220624140103949\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206241401974.png\" alt=\"image-20220624140124874\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206241409042.png\" alt=\"image-20220624140913920\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206241409149.png\" alt=\"image-20220624140943037\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206241410533.png\" alt=\"image-20220624141001431\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206241410032.png\" alt=\"image-20220624141028923\"></p>\n\n        <h1 id=\"能源互联网\">\n          <a href=\"#能源互联网\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#能源互联网\" class=\"headerlink\" title=\"能源互联网\"></a>能源互联网</h1>\n      <p>能源互联网是采取自下而上分散自治协同管理的模式，与目前集中大电网模式相辅相成，符合电网发展集中与分布相结合的大趋势；</p>\n\n        <h2 id=\"能源互联网架构\">\n          <a href=\"#能源互联网架构\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#能源互联网架构\" class=\"headerlink\" title=\"能源互联网架构\"></a>能源互联网架构</h2>\n      <p>能源互联网是以互联网理念构建的新型信息—能源融合“广域网”，它以大电网为“主干网”，以微网、分布式能源、智能小区等为“局域网”，以开放对等的信息—能源一体化架构真正实现能源的双向按需传输和动态平衡使用，因此可以最大限度的适应新能源的接入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206272214546.png\" alt=\"image-20220627221430184\"></p>\n<ul>\n<li>美国Internet of Energy：FREEDM——Energy Router（<strong>能源路由器</strong>）</li>\n</ul>\n<p>FREEDM期望借助于功率电子技术的发展成熟解决小型分布式可再生能源的接入空置问题。</p>\n<ul>\n<li>欧洲能源互联网：E-Energy——以 ICT为基础的未来能源系统</li>\n</ul>\n<p>目标是建立一个能基本实现自我调控的智能化电力系统，最终建设成功能源互联网。E-Energy更加重视新型可再生能源的使用。</p>\n<ul>\n<li>日本数字电网联盟推进电力路由器。</li>\n</ul>\n\n        <h2 id=\"能源互联网基础设施与应用模式\">\n          <a href=\"#能源互联网基础设施与应用模式\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#能源互联网基础设施与应用模式\" class=\"headerlink\" title=\"能源互联网基础设施与应用模式\"></a>能源互联网基础设施与应用模式</h2>\n      <p>• 以互联网的开放对等理念和体系架构为指导，形成新型的能源网。这时候**能源互联网（Energy Internet）指的是基础设施！以美国的FREEDM为典型代表，效仿网络技术的核心路由器，提出了能源路由器的概念并且进行了原型实现。 </p>\n<p>• 借助互联网收集能源相关信息，分析决策后指导能源网的运行调度。这时候**能源互联网（Internet of Energy）的指的是上层业务应用！以欧洲的e-Energy为典型代表，打造一个基于信息和通信技术的能源供应系统，连接能源供应链各个环节业务流程，实现示范应用形成能源需求和供给的互动。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206272227876.png\" alt=\"image-20220627222713717\"></p>\n\n        <h2 id=\"能源互联网关键技术\">\n          <a href=\"#能源互联网关键技术\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#能源互联网关键技术\" class=\"headerlink\" title=\"能源互联网关键技术\"></a>能源互联网关键技术</h2>\n      <ul>\n<li>能源互联网中的能量传输—柔性直流</li>\n<li>能源互联网中的Cache—储能</li>\n<li>能源互联网中的控制—电力电子技术</li>\n<li>能量路由器</li>\n<li>借鉴未来网络体系结构构建信息物理融合系统</li>\n<li>与电力基础设施结合的数据中心设计</li>\n<li>能源互联网中新型传感装置</li>\n<li>能源互联网大数据分析</li>\n<li>能源互联网能量管理系统</li>\n</ul>\n\n        <h2 id=\"能源互联网应用\">\n          <a href=\"#能源互联网应用\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#能源互联网应用\" class=\"headerlink\" title=\"能源互联网应用\"></a>能源互联网应用</h2>\n      <ul>\n<li>储能</li>\n<li>新能源接入</li>\n<li>电能质量</li>\n<li>电动汽车充电网</li>\n</ul>\n\n        <h2 id=\"能源互联网发展趋势\">\n          <a href=\"#能源互联网发展趋势\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#能源互联网发展趋势\" class=\"headerlink\" title=\"能源互联网发展趋势\"></a>能源互联网发展趋势</h2>\n      <p>主体多元</p>\n<p>个性化</p>\n<p>开源技术</p>\n\n        <h2 id=\"能源互联网示范工程特点\">\n          <a href=\"#能源互联网示范工程特点\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#能源互联网示范工程特点\" class=\"headerlink\" title=\"能源互联网示范工程特点\"></a>能源互联网示范工程特点</h2>\n      <p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206272239700.png\" alt=\"image-20220627223905535\"></p>\n\n        <h2 id=\"总结\">\n          <a href=\"#总结\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2>\n      <ul>\n<li>自下而上基础设施——开放对等、互联分享——多能互补——源网荷储协调； </li>\n<li>自上而下运行控制——用户中心、价值驱动——多元主体——发配变售一体； </li>\n<li>平行发展——能量、信息、业务、价值； </li>\n<li> 技术支撑——能量交换与路由——信息物理融合——能量运行与管理——交易与互联网平台</li>\n<li>示范牵引——售电开放——需求侧管理——分布式新能源海量接入——区域能源运营商</li>\n</ul>\n\n        <h1 id=\"OSI七层模型\">\n          <a href=\"#OSI七层模型\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#OSI七层模型\" class=\"headerlink\" title=\"OSI七层模型\"></a>OSI七层模型</h1>\n      <p>OSI参考模型把网络中计算机之间的信息传递分成7个较小的易于管理的层，它的7层协议中的每一层协议分别执行一个（或一组）任务，各层间相互独立，互不影响。</p>\n<p>低层负责处理数据传输问题，物理层和数据链路层由硬件和软件共同实现，而其他层通常只是用软件来实现。最底层（物理层）最接近物理网络介质（如网络电缆），其职责是将信息放置到介质上。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206272311054.png\" alt=\"image-20220627231120963\"></p>\n<ul>\n<li><p>应用层：  </p>\n<p>是最接近终端用户的OSI层，这就意味着OSI应用层与用户之间是通过软件直接相互作用的。应用层的功能一般包括标识通信伙伴、定义资源的可用性和同步通信。</p>\n</li>\n<li><p>表示层</p>\n<p>提供多种用于应用层数据的编码和转化功能，以确保从一个系统应用层发送的信息可以被另一系统的应用层识别。</p>\n</li>\n<li><p>会话层</p>\n<p>用于建立、管理和终止表示层与实体之间的通信会话，通信会话包括发生在不同网络设备的应用层之间的服务请求和服务应答，这些请求和应答通过会话层的协议实现。</p>\n</li>\n<li><p>传输层</p>\n<p> 用于实现向高层可靠地传输数据的服务。传输层的功能一般包括流量控制、多路传输、虚电路管理及差错校验和恢复。</p>\n</li>\n<li><p>网络层</p>\n<p>用于提供路由选择及其相关的功能，网络层为高层协议提供面向连接的服务和无连接服务。网络层协议一般都是路由选择协议，但其他类型的协议也可在网络层上实现。</p>\n</li>\n<li><p>数据链路层</p>\n<p> 数据链路层通过物理网络链路提供可靠的数据传输。不同的数据链路层定义了不同的网络和协议特性，其中包括物理编址、网络拓扑结构、错误校验、帧序列以及流控。</p>\n</li>\n<li><p>物理层</p>\n<p>物理层定义了用于执行、维护、终止物理链路所需要的电子、机械、过程及功能的规则。</p>\n</li>\n</ul>\n\n        <h2 id=\"建立网络体系结构的出发点\">\n          <a href=\"#建立网络体系结构的出发点\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#建立网络体系结构的出发点\" class=\"headerlink\" title=\"建立网络体系结构的出发点\"></a>建立网络体系结构的出发点</h2>\n      \n        <h3 id=\"抽象化\">\n          <a href=\"#抽象化\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#抽象化\" class=\"headerlink\" title=\"抽象化\"></a>抽象化</h3>\n      <p>在OSI体系结构中，问题的处理采用了抽象化的 方法。分为三级抽象：</p>\n<p>● 一是参考模型 ● 二是服务定义，● 三是协议规范。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207011338271.png\" alt=\"image-20220701133851182\"></p>\n<ol>\n<li>OSI参考模型是建立网络系统功能和概念的抽象模型，它定义了七层模型。    </li>\n<li>OSI服务定义比较详细地定义了各层所提供的报务。OSI服务只不过是层间的抽象接口，这个抽象接口往往是由所谓的服务原语（service primitive）来实现的。 </li>\n<li>OSI协议规范是最低一级的抽象概念。协议也称规程，它指多个开放系统的同等层在执行通信时，双方约定的通信规则。 它由三个部分组成： </li>\n</ol>\n<ul>\n<li>语法(syntax)：数据和控制信息的结构和格式;</li>\n<li>语义(semantic)：明确控制信息的意义、作用及所要求的响应;</li>\n<li>同步(time)：实现网络通信的顺序，即通信时间顺序要同步。</li>\n</ul>\n<p>★ OSI协议规范是网络体系结构的中心</p>\n\n        <h3 id=\"虚拟化\">\n          <a href=\"#虚拟化\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#虚拟化\" class=\"headerlink\" title=\"虚拟化\"></a>虚拟化</h3>\n      <p>在OSI体系统结构中，协议研究的出发点和协议实现的归着点大都是虚拟的。所谓虚拟是实现网络中不完全存在的，然而又是实际网络的高度概括与理想化。如：</p>\n<ul>\n<li>逻辑信道       </li>\n<li>虚拟电路         </li>\n<li>虚拟内存         </li>\n<li>虚拟终端</li>\n</ul>\n\n        <h3 id=\"分层化\">\n          <a href=\"#分层化\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#分层化\" class=\"headerlink\" title=\"分层化\"></a>分层化</h3>\n      <p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207011333092.png\" alt=\"image-20220701133318970\"></p>\n\n        <h2 id=\"分层体系结构相关概念\">\n          <a href=\"#分层体系结构相关概念\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#分层体系结构相关概念\" class=\"headerlink\" title=\"分层体系结构相关概念\"></a>分层体系结构相关概念</h2>\n      \n        <h3 id=\"（N）层-与（N）实体\">\n          <a href=\"#（N）层-与（N）实体\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#（N）层-与（N）实体\" class=\"headerlink\" title=\"（N）层 与（N）实体\"></a>（N）层 与（N）实体</h3>\n      <ul>\n<li>（N）层表示某一特定层</li>\n<li>（N+1)层表示(N)层相邻的上一层</li>\n<li>（N-1）层表示(N)层相邻的下一层</li>\n</ul>\n<ol>\n<li><p>（N）层实体简称（N）实体</p>\n<p>是(N)层通信进程的通信手段，在分层结构中实体被定义为相互通信进程的通信手段，泛指一切能够发送和接收信息的东西，如用户应用程序、数据库管理系统、终端等。在许多情况下，就是指一个特定的软件模块。每一层由一个或多个实体组成，有了实体的概念，信息交换究竟是一个进程，一个文件还是一个终端，都没有实质区别。 </p>\n</li>\n<li><p>两主机的（N）同层实体进行通信时称为（N）同层进程, 实体进行通信就是进程。</p>\n</li>\n<li><p>实体与进程的区别：</p>\n</li>\n</ol>\n<p>实体是一个“静”的概念，它指通信手段；进程是一个“动”的概念，它指通信手段正在进行通信。    </p>\n\n        <h3 id=\"（N）协议-与（N）服务\">\n          <a href=\"#（N）协议-与（N）服务\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#（N）协议-与（N）服务\" class=\"headerlink\" title=\"（N）协议 与（N）服务\"></a>（N）协议 与（N）服务</h3>\n      <ol>\n<li><p>在执行（N）层通信时，确定（N）同层实体相互通信行为的一组规则、数据信息格式、相互通信要同步的原则称为（N）层协议， 简称（N）协议。</p>\n</li>\n<li><p>（N+1）同层实体要完成通信，从物理实现的角度讲，（N+1）实体必须请求（N）实体给它提供通信能力，而这种通信能力是通过两层边界之间的端口（接口）提供的。</p>\n</li>\n<li><p>在分层结构中，将（N）实体通过端口向（N+1）实体提供通信能力的过程称为（N）层服务，简称（N）服务。</p>\n</li>\n<li><p>协议与服务的区别：</p>\n<p>协议是水平的</p>\n<p>服务是垂直的 </p>\n</li>\n<li><p>（N）层的功能主要包括：（N）协议和（N）服务。    </p>\n<p>对（N+1）层透明的是（N）服务；</p>\n<p>对（N+1）层非透明的是（N）协议。</p>\n</li>\n</ol>\n\n        <h3 id=\"接口——-N-服务访问点SAP与-N-服务连接端点\">\n          <a href=\"#接口——-N-服务访问点SAP与-N-服务连接端点\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#接口——-N-服务访问点SAP与-N-服务连接端点\" class=\"headerlink\" title=\"接口——(N)服务访问点SAP与(N)服务连接端点\"></a>接口——(N)服务访问点SAP与(N)服务连接端点</h3>\n      <ol>\n<li>在同层实体按协议进行通信时，在同一系统中相邻两层实体交换信息的地点，通常称为服务访问点SAP。因此，（N）实体给（N+1）实体提供服务的地点，或者（N+1）实体请求（N）实体服务的地点，称为（N）服务访问点SAP。</li>\n<li>由于只能通过（N）SAP，同一系统相邻两层实体才能发生交互作用，于是就出现了（N+1）实体与（N）实体通过（N）SAP相互联接的概念，其连接点处于（N）SAP内，称为（N）服务连接端点CEP。 </li>\n</ol>\n\n        <h3 id=\"（N）连接\">\n          <a href=\"#（N）连接\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#（N）连接\" class=\"headerlink\" title=\"（N）连接\"></a>（N）连接</h3>\n      <p>是由（N）同层实体的两个或者多个（N）CEP所连接的、被（N+1）同层实体用来交换数据信息的虚拟通道,如图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207011342948.png\" alt=\"image-20220701134254855\"></p>\n\n        <h3 id=\"连接型通信与非连接型通信\">\n          <a href=\"#连接型通信与非连接型通信\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#连接型通信与非连接型通信\" class=\"headerlink\" title=\"连接型通信与非连接型通信\"></a>连接型通信与非连接型通信</h3>\n      <ol>\n<li><p>连接型通信包括三部分：</p>\n<p>建立连接</p>\n<p>交换数据</p>\n<p>拆除连接：</p>\n<p>​    主要有常规拆除、有序拆除、异常拆除三种</p>\n</li>\n<li><p>非连接型通信也称数据报</p>\n</li>\n</ol>\n<ul>\n<li> 无证实数据报：如数字话音通信。对实时要求较高而准确性要求较低</li>\n<li>层证实数据报：如挂号电子邮件</li>\n<li>用户证实数据报：一问一答方式。</li>\n</ul>\n\n        <h3 id=\"地址和地址映射\">\n          <a href=\"#地址和地址映射\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#地址和地址映射\" class=\"headerlink\" title=\"地址和地址映射\"></a>地址和地址映射</h3>\n      <p>（N）SAP的标识称为（N）SAP地址，简称（N）地址。</p>\n<p>（N）地址与（N-1）地址的对应关系就是地址映射，有四种：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207011343911.png\" alt=\"image-20220701134316797\"></p>\n\n        <h3 id=\"分层结构中的流量控制\">\n          <a href=\"#分层结构中的流量控制\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#分层结构中的流量控制\" class=\"headerlink\" title=\"分层结构中的流量控制\"></a>分层结构中的流量控制</h3>\n      <ol>\n<li><p>（N）接口流量控制           </p>\n<p>相邻层之间</p>\n</li>\n<li><p>（N）对等层实体间的流量控制</p>\n<p>如：</p>\n<ul>\n<li><p>数据链路层之间        </p>\n</li>\n<li><p>网络层之间</p>\n</li>\n<li><p>传输层之间</p>\n</li>\n</ul>\n</li>\n</ol>\n","tags":["复习"]}]