[{"title":"计算机网络","url":"/2022-06-18-计算机网络笔记.html","content":"\n# GSM\n\n## GSM网络结构\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220617153720016.png\" alt=\"image-20220617153720016\" style=\"zoom:50%;\" />\n\n- MS- Mobile Station (移动台)\n\n- BSS-Base Station System (基站系统)\n\n- BTS-Base Transceiver Station (基站收发台）\n\n  可把它看成是一个无线解调器。简单的说，它也是一个天线，接收手机发出的信号，同时也向手机发出信号。它完全由BSC控制，主要负责无线传输，完成无线与有线的转换、无线分集、无线信道加密、跳频等功能。 \n\n- BSC-Base Station Controller (基站控制器)\n\n  具有对一个或多个BTS进行控制的功能，它主要负责无线网路资源的管理、小区配置数据管理、功率控制、定位和切换等，是个很强的业务控制点BSC通过BTS和MS来管理信道的分配，释放及切换。一个BSC一端连接着几个BTS,另一端连接MSC。BSC和BTS合起来叫基站子系统。\n\n- MSC-Mobile Switching Center (移动业务交换中心)\n\n  移动业务交换中心，它是GSM网络的心脏，主要功能是协调呼叫GSM用户和来自GSM用户的呼叫。同时，它通过一些设备和其它网络相连，例如与固定电话相连。\n\n- OMC-Operations and Maintenance Center(操作与维护中心)\n\n  对整个GSM网路进行管理和监控。通过它实现对GSM网内各种部件功能的监视、状态报告、故障诊断等功能。\n\n- NMC-Network Management Center (网络管理中心)\n\n- AUC-Authentication Center (鉴权中心)\n\n  它是HLR功能的一部份，它的作用是检测用户的权限和判断用户是否是合法的用户。\n\n- HLR-Home Location Register (归属位置寄存器)\n\n  存储管理部门用于移动客户管理的数据，它主要存储两类信息：一是有关客户的参数；二是有关客户目前所处位置的信息，以便建立至移动台的呼叫路由 。\n\n- VLR-Visitors Location Register  (来访位置寄存器)\n\n  来访位置寄存器,是一个数据库，是存储MSC,为了处理所管辖区域中MS（统称拜访客户）的来话、去话呼叫所需检索的信息。\n\n- EIR-Equipment Identity Register (设备标识寄存器)\n\n  存储有关移动台设备参数。主要完成对移动设备的识别、监视、闭锁等功能，以防止非法移动台的使用。\n\n- PSTN (设公共电话交换网)\n\n\n## SIM卡　\n\n### SIM卡的构成\n\n1. CPU\n2. 程序存储器(ROM) \n3. 工作存储器(RAM) \n4. 数据存储器(EPROM或E2PROM)\n5. 串行通信单元 　　\n\n这五个模块必须集成在一块集成电路中，否则其安全性会受到威胁。因为，芯片间的连线可能成为非法存取和盗用SIM卡的重要线索。\n\n### SIM卡中的保密算法及密钥　　\n\n1. 保密算法：A3，A5，A8，由制造商生产SIM卡时写入，算法保密，由运营商掌握；\n2. 密钥Ki和Kc，Ki由运营商写入，Kc加密过程中由Ki导出，实际通信过程中使用Kc来进行加密；\n3. Ki生成及写入SIM过程：\n\n- Ki由运营商选择一种高级算法DES，以用户IMSI和母密钥Kki计算Ki=DES(IMSI,Kki)；\n- Ki写在SIM卡中，同时也要传送AUC；在GSM中，先将Ki利用安全算法DES和加密密钥Kdes对Ki进行加密（写卡过程）\n- 密文传送给AUC/HLR，然后用Kdes解密，得到Ki（运营商开卡）\n- 保护Ki的关键在于运营商保护密钥Kdes\n\n## GSM安全体系\n\n### GSM鉴权\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207052258852.png\" alt=\"image-20220705225839647\" style=\"zoom:50%;\" />\n\n### GSM加密技术\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207052259320.png\" alt=\"image-20220705225927166\" style=\"zoom:50%;\" />\n\n### GSM安全分析\n\n1. 认证方案缺陷\n\n   只有用户认证，没有网络认证，不能避免基站伪装；\n\n   安全性依赖于私钥Ki的安全性；\n\n2. 加密方案缺陷\n\n   加密不是端到端的，只是无线信道部分，在其他信道容易被截获；\n\n   没有考虑数据完整性；密钥太短，密钥生成算法固定，该算法已可被快速破解；\n\n3. TMSI安全问题\n\n   移动台第一次注册和漫游时，仍需要明文发送IMSI；\n\n   访问位置寄存器中与用户有关数据丢失时，网络端要求用户发送IMSI以获得用户真实身份；\n\n## 3G、2G\n\n### 3G鉴权五元组\n\n- RAND\n- XRES\n- AUTN\n- CK\n- IK\n\n### 2G鉴权三元组\n\n- RAND（Random Number）\n- SRES( SignedResponse)\n- Kc( Ciphering Key)\n\n# 云计算&大数据&区块链\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207061453227.png\" alt=\"image-20220706101311503\" style=\"zoom:50%;\" />\n\n## GFS\n\n- 将文件划分为若干块（Chunk）存储\n\n  每个块固定大小（64M）\n\n- 通过冗余来提高可靠性\n\n  每个数据块至少在3个数据块服务器上冗余\n\n- 通过单个master来协调数据访问、元数据存储\n\n  结构简单，容易保持元数据一致性\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207061453696.png\" alt=\"image-20220706101603216\" style=\"zoom:50%;\" />\n\nMaster节点：\n\n1. 存储元数据\n\n2. 文件系统目录管理与加锁\n\n3. 与ChunkServer进行周期性通信\n\n   发送指令，搜集状态，跟踪数据块的完好性\n\n4. 数据块创建、复制及负载均衡\n\n   对ChunkServer的空间使用和访问速度进行负载均衡，平滑数据存储和访问请求的负载\n\n   对数据块进行复制、分散到ChunkServer上\n\n   一旦数据块冗余数小于最低数，就发起复制操作\n\n## 分布式计算 MapReduce\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207061453648.png\" alt=\"image-20220706102912595\" style=\"zoom:50%;\" />\n\nMapReduce实现了Map和Reduce两个功能\n\n- Map把一个函数应用于集合中的所有成员，然后返回一个基于这个处理的结果集\n- Reduce对结果集进行分类和归纳\n- Map()和 Reduce() 两个函数可能会并行运行，即使不是在同一的系统的同一时刻\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207061453092.png\" alt=\"image-20220706103359588\" style=\"zoom:50%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207061453919.png\" alt=\"image-20220706103742578\" style=\"zoom:50%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207061453472.png\" alt=\"image-20220706103852467\" style=\"zoom:50%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207062323680.png\" alt=\"image-20220706104100603\" style=\"zoom:50%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207061453120.png\" alt=\"image-20220706104545224\" style=\"zoom:50%;\" />\n\n## 区块链\n\n### 核心技术\n\n区块链的底层结构是对等网络--Kademlia(简称Kad)。\n\n- Kad属于一种典型的结构化P2P覆盖网络(Structured P2P Overlay Network)。\n- 在Kademlia网络中，所有信息均以的哈希表条目形式加以存储，这些条目被分散地存储在各个节点上，从而以全网方式构成一张巨大的分布式哈希表。\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207061454152.png\" alt=\"image-20220706105313622\" style=\"zoom:50%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207061455113.png\" alt=\"image-20220706105438173\" style=\"zoom:50%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211324532.png\" alt=\"image-20220621132419428\" style=\"zoom:50%;\" />\n\n### 数据区块\n\n比特币的交易记录会保存在数据区块中，每个区块一般包括区块头（Header）和区块体（Body）两部分。\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207061452323.png\" alt=\"image-20220706110002968\" style=\"zoom: 67%;\" />\n\n### 概念\n\n工作原理：简单地说，区块链就是不再依赖中心化的记账，而是通过一种密码学计算让全网节点随机争夺记账权，争夺到记账权的节点就会被奖励比特币，而记完后的账本发布给全网所有节点保存。\n\n| **概念**    | **解释**                                                     |\n| ----------- | ------------------------------------------------------------ |\n| 公钥        | 相当于账号，全网每个节点都有一个公钥，别人付钱时都是付给这个公钥 |\n| 私钥        | 相当于你的账号的身份证明，私钥可以解开公钥加密的数据，说明付款方确实是你。私钥必须妥善保存，一旦丢失，就丢失了账户内的所有数据也就是所有财产。 |\n| 交易        | 节点之间发生的支付就是交易                                   |\n| 区块        | 一段时间内的所有交易会打包成一个区块。这个区块还会记录上一个区块的hash值，使得上一个区块不可篡改。区块会包含时间戳，这个时间戳解决了“双花”问题，也就是一个货币不能被支付两次，区块链技术中承认时间戳在前的交易的有效性。 |\n| 区块链      | 由于每个区块都有上一个区块的hash值，造成每生成一个新区快，就会造成老区块的不可篡改，从而形成全部数据的不可篡改。 |\n| 记账权/挖矿 | 所谓记账权，也就是比特币中的挖矿，其实就是把从上次区块生成后到现在为止的所有交易打包再打上时间戳，向全网公示，51%的节点确认区块有效则该区块就加入到区块链的末端，成为账本的一部分。由于不存在中心，所以记账权是全网争夺的，大家通过计算一道密码学难题，谁先解出来，并获得全网共识，谁就争夺到记账权。因为要鼓励大家参与记账，所以争夺到记账权会有报酬，就是若干比特币。 |\n| 共识机制    | 就是所有分布式节之间怎么达成共识，通过算法来生成和更新数据，去认定一个记录的有效性，这既是认定的手段，也是防止篡改的手段。以比特币为例，采用的是“工作量证明”（Proof Of Work，简称POW）。工作量是需要算力的，通过工作量证明，有效的防止了篡改和伪造，因为如果要达到伪造和篡改的工作量，大概需要上亿元成本跟的算力。 |\n\n# 软件定义网络SDN\n\n## SDN架构\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206211344302.png\" alt=\"image-20220621134425180\" style=\"zoom: 50%;\" />\n\n控制器：\n\n- 有自己的API、处理逻辑，以及向网络提要求、接受事件、处理SDN通信协议的能力。\n- 实现网络统一部署和网络自动化，对基础网络设施的抽象\n- 应用开发人员只使用控制器提供的API来实现网络自动化、网络编排和操作网络\n\n## SDN 的特点\n\nSDN 区别于传统网络技术的关键是“通过可编程性，将应用与网络设备之间的交互更紧密结合”。这种紧密结合性，需要三种思路：\n\n- 转发、控制分离（并不是所有的控制都要被分离出来）\n- 物理网络抽象\n- 编程接口\n\n可编程性是SDN的核心。\n\n\n\n# 无线局域网WLAN\n\n## 服务区标识符 ( SSID ) 匹配\n\n- 无线客户端必需设置与无线访问点AP相同的SSID ，才能访问AP;\n- 如果出示的SSID与AP的SSID不同，那么AP将拒绝它通过本服务区上网。\n- 利用SSID设置，可以很好地进行用户群体分组，避免任意漫游带来的安全和访问性能的问题。\n- 可以通过设置隐藏接入点(AP)及SSID区域的划分和权限控制来达到保密的目的，因此可以认为SSID是一个简单的口令，通过提供口令认证机制，实现一定的安全。\n\n## 物理地址( MAC )过滤\n\n- 每个无线客户端网卡都由唯一的48位物理地址(MAC)标识，可在AP中手工维护一组允许访问的MAC地址列表，实现物理地址过滤。\n- 这种方法的效率会随着终端数目的增加而降低，而且非法用户通过网络侦听就可获得合法的MAC地址表，而MAC地址并不难修改，因而非法用户完全可以盗用合法用户的MAC地址来非法接入\n\n## 有线对等保密(WEP)\n\n### WEP协议加密流程\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207062324146.png\" alt=\"image-20220706153850049\" style=\"zoom:50%;\" />\n\n### WEP认证机制\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207062324945.png\" alt=\"image-20220706154110336\" style=\"zoom:80%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207070008792.png\" alt=\"image-20220706172025188\" style=\"zoom:150%;\" />\n\n## 端口访问控制技术（IEEE802.1x）\n\n### 认证机制\n\n![image-20220706155239035](https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207062324137.png)\n\n# QoS\n\nQoS（Quality of Service）即服务质量。对于网络业务，服务质量包括传输的带宽、传送的时延、数据的丢包率等，在网络中可以通过保证传输的带宽、降低传送的时延、降低数据的丢包率以及时延抖动等措施来提高服务质量。\n\n## 业务模型\n\n1. Best-Effort 模型：是目前Internet的缺省服务模型，主要实现技术是先进先出队列(FIFO)，它适用于绝大多数网络应用，如FTP、 E-Mail等。\n\n   Best-Effort是单一的服务模型，也是最简单的服务模型。\n\n2. Int-Serv模型(集成服务)：是一个综合服务模型，它可以满足多种QoS 需求。该模型使用资源预留协议（RSVP），RSVP 运行在从源端到目的端的每个设备上，可以监视每个流，以防止其消耗资源过多。\n\n3.  Diff-Serv模型(差分服务)：当网络出现拥塞时，根据业务的不同服务等级约定，有差别地进行流量控制和转发来解决拥塞问题\n\n# MANET\n\nmobile ad-hoc network（移动Ad-hoc网络）\n\n- 移动Ad hoc网络/多跳无线网络\n- 由一组带有无线通信收发装置的移动终端节点组成\n- 网络中每个终端可以自由移动、地位相等\n- 是一个多跳、临时、无中心网络\n- 不需要现有信息基础网络设施的支持\n- 可以在任何时候、任何地点快速构建\n\n## MANET特点\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207062324545.png\" alt=\"image-20220706161322361\" style=\"zoom:50%;\" />\n\n## VS传统蜂窝网络\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207062325537.png\" alt=\"image-20220706161517222\" style=\"zoom:50%;\" />\n\n## VS固定网络\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207062325125.png\" alt=\"image-20220706161533382\" style=\"zoom:50%;\" />\n\n## VS其他无线网络\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207062325688.png\" alt=\"image-20220706161851911\" style=\"zoom:50%;\" />\n\n# MESH\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207062325672.png\" alt=\"image-20220706163400953\" style=\"zoom: 50%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207062325444.png\" alt=\"image-20220706163516723\" style=\"zoom:50%;\" />\n\n![image-20220706164128566](https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207062325792.png)\n\n![image-20220706164219134](https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207062325065.png)\n\n# DLNA\n\nDIGITAL LIVING NETWORK ALLIANCE（智能家庭网络）\n\n## DLNA的架构\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207062326473.png\" alt=\"image-20220706170822970\" style=\"zoom: 50%;\" />\n\n1. 网络互连(Net Working Connectivity)\n\n   其规定了所接入网络的类型和协议。目前主要包括：   \n\n   (1)有线网络：802.3.i/u(网略接入类型)  \n\n   (2)无线网络：802.11/a/b/g/n(网略接入类型)\n\n2. 网络协议(Net Working Stack)\n\n   其规定了所使用的网络协议。目前，其规定必须支持IPv4(网略协议)。\n\n3. 设备的发现，控制和媒体的管理(Device Discovery & Control)。\n\n   这个功能组件是最重要的一个层次。DLNA是使用UPNP标准来实现对媒体资源的共享以及设备的管理。       \n\n4. 媒体传输（Media transport）\n\n   其规定了所有DLNA设备都必须支持使用HTTP(超文本传输)协议进行媒体的传输。\n\n5. 媒体格式（ Media Formats）\n\n   支持的媒体格式包括：\n\n   (1) Image: JPEG PNG, GIF, TIFF \n\n   (2)Audio: LPCM AAC, AC-3, ATRAC 3plus, MP3, WMA9 \n\n   (3)Video: MPEG2 MPEG-1, MPEG-4*, AVC, WMV9 \n\n# OSI七层模型\n\nOSI参考模型把网络中计算机之间的信息传递分成7个较小的易于管理的层，它的7层协议中的每一层协议分别执行一个（或一组）任务，各层间相互独立，互不影响。\n\n低层负责处理数据传输问题，物理层和数据链路层由硬件和软件共同实现，而其他层通常只是用软件来实现。最底层（物理层）最接近物理网络介质（如网络电缆），其职责是将信息放置到介质上。\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206272311054.png\" alt=\"image-20220627231120963\" style=\"zoom:50%;\" />\n\n- 应用层：  \n\n  是最接近终端用户的OSI层，这就意味着OSI应用层与用户之间是通过软件直接相互作用的。应用层的功能一般包括标识通信伙伴、定义资源的可用性和同步通信。\n\n- 表示层\n\n  提供多种用于应用层数据的编码和转化功能，以确保从一个系统应用层发送的信息可以被另一系统的应用层识别。\n\n- 会话层\n\n  用于建立、管理和终止表示层与实体之间的通信会话，通信会话包括发生在不同网络设备的应用层之间的服务请求和服务应答，这些请求和应答通过会话层的协议实现。\n\n- 传输层\n\n  用于实现向高层可靠地传输数据的服务。传输层的功能一般包括流量控制、多路传输、虚电路管理及差错校验和恢复。\n\n- 网络层\n\n  用于提供路由选择及其相关的功能，网络层为高层协议提供面向连接的服务和无连接服务。网络层协议一般都是路由选择协议，但其他类型的协议也可在网络层上实现。\n\n- 数据链路层\n\n  数据链路层通过物理网络链路提供可靠的数据传输。不同的数据链路层定义了不同的网络和协议特性，其中包括物理编址、网络拓扑结构、错误校验、帧序列以及流控。\n\n- 物理层\n\n  物理层定义了用于执行、维护、终止物理链路所需要的电子、机械、过程及功能的规则。\n\n\n\n## 建立网络体系结构的出发点\n\n### 抽象化\n\n在OSI体系结构中，问题的处理采用了抽象化的 方法。分为三级抽象：\n\n● 一是参考模型 ● 二是服务定义，● 三是协议规范。\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207011338271.png\" alt=\"image-20220701133851182\" style=\"zoom: 50%;\" />\n\n1. OSI参考模型是建立网络系统功能和概念的抽象模型，它定义了七层模型。    \n2. OSI服务定义比较详细地定义了各层所提供的报务。OSI服务只不过是层间的抽象接口，这个抽象接口往往是由所谓的服务原语（service primitive）来实现的。 \n3. OSI协议规范是最低一级的抽象概念。协议也称规程，它指多个开放系统的同等层在执行通信时，双方约定的通信规则。 它由三个部分组成： \n\n- 语法(syntax)：数据和控制信息的结构和格式;\n- 语义(semantic)：明确控制信息的意义、作用及所要求的响应;\n- 同步(time)：实现网络通信的顺序，即通信时间顺序要同步。\n\n★ OSI协议规范是网络体系结构的中心\n\n### 虚拟化\n\n在OSI体系统结构中，协议研究的出发点和协议实现的归着点大都是虚拟的。所谓虚拟是实现网络中不完全存在的，然而又是实际网络的高度概括与理想化。如：\n\n- 逻辑信道       \n- 虚拟电路         \n- 虚拟内存         \n- 虚拟终端\n\n### 分层化 \n\n![image-20220701133318970](https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207011333092.png)\n\n## 分层体系结构相关概念\n\n### （N）层 与（N）实体\n\n- （N）层表示某一特定层\n- （N+1)层表示(N)层相邻的上一层\n- （N-1）层表示(N)层相邻的下一层\n\n1. （N）层实体简称（N）实体\n\n   是(N)层通信进程的通信手段，在分层结构中实体被定义为相互通信进程的通信手段，泛指一切能够发送和接收信息的东西，如用户应用程序、数据库管理系统、终端等。在许多情况下，就是指一个特定的软件模块。每一层由一个或多个实体组成，有了实体的概念，信息交换究竟是一个进程，一个文件还是一个终端，都没有实质区别。 \n\n2. 两主机的（N）同层实体进行通信时称为（N）同层进程, 实体进行通信就是进程。\n\n3. 实体与进程的区别：\n\n实体是一个“静”的概念，它指通信手段；进程是一个“动”的概念，它指通信手段正在进行通信。    \n\n### （N）协议 与（N）服务\n\n1. 在执行（N）层通信时，确定（N）同层实体相互通信行为的一组规则、数据信息格式、相互通信要同步的原则称为（N）层协议， 简称（N）协议。\n\n2. （N+1）同层实体要完成通信，从物理实现的角度讲，（N+1）实体必须请求（N）实体给它提供通信能力，而这种通信能力是通过两层边界之间的端口（接口）提供的。\n\n3. 在分层结构中，将（N）实体通过端口向（N+1）实体提供通信能力的过程称为（N）层服务，简称（N）服务。\n\n4. 协议与服务的区别：\n\n   协议是水平的\n\n   服务是垂直的 \n\n5. （N）层的功能主要包括：（N）协议和（N）服务。    \n\n   对（N+1）层透明的是（N）服务；\n\n   对（N+1）层非透明的是（N）协议。\n\n### 接口——(N)服务访问点SAP与(N)服务连接端点\n\n1. 在同层实体按协议进行通信时，在同一系统中相邻两层实体交换信息的地点，通常称为服务访问点SAP。因此，（N）实体给（N+1）实体提供服务的地点，或者（N+1）实体请求（N）实体服务的地点，称为（N）服务访问点SAP。\n2. 由于只能通过（N）SAP，同一系统相邻两层实体才能发生交互作用，于是就出现了（N+1）实体与（N）实体通过（N）SAP相互联接的概念，其连接点处于（N）SAP内，称为（N）服务连接端点CEP。 \n\n### （N）连接\n\n是由（N）同层实体的两个或者多个（N）CEP所连接的、被（N+1）同层实体用来交换数据信息的虚拟通道,如图\n\n![image-20220701134254855](https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207011342948.png)\n\n### 连接型通信与非连接型通信\n\n1. 连接型通信包括三部分：\n\n   建立连接\n\n   交换数据\n\n   拆除连接：\n\n   ​\t主要有常规拆除、有序拆除、异常拆除三种\n\n2. 非连接型通信也称数据报\n\n-  无证实数据报：如数字话音通信。对实时要求较高而准确性要求较低\n-  层证实数据报：如挂号电子邮件\n-  用户证实数据报：一问一答方式。\n\n### 地址和地址映射\n\n（N）SAP的标识称为（N）SAP地址，简称（N）地址。\n\n（N）地址与（N-1）地址的对应关系就是地址映射，有四种：\n\n![image-20220701134316797](https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202207011343911.png)\n\n### 分层结构中的流量控制\n\n1. （N）接口流量控制           \n\n   相邻层之间\n\n2. （N）对等层实体间的流量控制\n\n   如：\n\n   - 数据链路层之间        \n\n   - 网络层之间\n\n   - 传输层之间\n\n# 能源互联网\n\n能源互联网是采取自下而上分散自治协同管理的模式，与目前集中大电网模式相辅相成，符合电网发展集中与分布相结合的大趋势；\n\n## 能源互联网架构\n\n能源互联网是以互联网理念构建的新型信息—能源融合“广域网”，它以大电网为“主干网”，以微网、分布式能源、智能小区等为“局域网”，以开放对等的信息—能源一体化架构真正实现能源的双向按需传输和动态平衡使用，因此可以最大限度的适应新能源的接入。\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206272214546.png\" alt=\"image-20220627221430184\" style=\"zoom:50%;\" />\n\n- 美国Internet of Energy：FREEDM——Energy Router（**能源路由器**）\n\n  FREEDM期望借助于功率电子技术的发展成熟解决小型分布式可再生能源的接入空置问题。\n\n- 欧洲能源互联网：E-Energy——以 ICT为基础的未来能源系统\n\n  目标是建立一个能基本实现自我调控的智能化电力系统，最终建设成功能源互联网。E-Energy更加重视新型可再生能源的使用。\n\n- 日本数字电网联盟推进电力路由器。\n\n## 能源互联网基础设施与应用模式\n\n• 以互联网的开放对等理念和体系架构为指导，形成新型的能源网。这时候**能源互联网（Energy Internet）指的是基础设施！以美国的FREEDM为典型代表，效仿网络技术的核心路由器，提出了能源路由器的概念并且进行了原型实现。 \n\n• 借助互联网收集能源相关信息，分析决策后指导能源网的运行调度。这时候**能源互联网（Internet of Energy）的指的是上层业务应用！以欧洲的e-Energy为典型代表，打造一个基于信息和通信技术的能源供应系统，连接能源供应链各个环节业务流程，实现示范应用形成能源需求和供给的互动。\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206272227876.png\" alt=\"image-20220627222713717\" style=\"zoom:50%;\" />\n\n## 能源互联网关键技术\n\n- 能源互联网中的能量传输—柔性直流\n- 能源互联网中的Cache—储能\n- 能源互联网中的控制—电力电子技术\n- 能量路由器\n- 借鉴未来网络体系结构构建信息物理融合系统\n- 与电力基础设施结合的数据中心设计\n- 能源互联网中新型传感装置\n- 能源互联网大数据分析\n- 能源互联网能量管理系统\n\n## 能源互联网应用\n\n- 储能\n- 新能源接入\n- 电能质量\n- 电动汽车充电网\n\n## 能源互联网发展趋势\n\n主体多元\n\n个性化\n\n开源技术\n\n## 能源互联网示范工程特点\n\n<img src=\"https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/202206272239700.png\" alt=\"image-20220627223905535\" style=\"zoom:50%;\" />\n\n## 总结\n\n- 自下而上基础设施——开放对等、互联分享——多能互补——源网荷储协调； \n- 自上而下运行控制——用户中心、价值驱动——多元主体——发配变售一体； \n- 平行发展——能量、信息、业务、价值； \n-  技术支撑——能量交换与路由——信息物理融合——能量运行与管理——交易与互联网平台\n- 示范牵引——售电开放——需求侧管理——分布式新能源海量接入——区域能源运营商\n","tags":["复习"]},{"title":"php基础","url":"/2022-01-29-php基础.html","content":"\n使用phpstudy：（路径：D:\\phpstudy_pro\\WWW）\n\n127.0.0.1：\n\n​\t默认访问phpstudy自带的index.html\n\n127.0.0.1/文件名：\n\n​\t访问自建的在WWW目录下的文件\n","tags":["学习记录","php","新手向"]},{"title":"避坑指南——修改hexo主题的图片路径问题","url":"/2022-01-19-避坑指南——修改hexo主题的图片路径问题.html","content":"\n# **前言**\n\n搭好博客只花了两天，然后想选一个自己喜欢的hexo主题美化一下，没想到更改了头像（avatar）和背景图片后竟然无法显示，网上的解决方法几乎全部尝试了一遍，花了四五天的时间终于弄好了，在这期间走了不少弯路，所以就总结了一篇避坑指南，旨在分享给一些有同样问题的hexo入门新手。\n\nPS:本文旨在避坑，一些步骤在网上有非常多的教程，在这里就一笔带过~\n\n\n\n# **问题来源**\n\n我们要修改hexo主题里的图片，需要进入主题目录下的配置文件_config，在里面填入自己图片的url：\n\n```\navatar:\n    url: xxxxxx\n```\n\n网上有的教程说填相对路径，即本机放图片的文件夹位置，这种说法完全**错误！**\n\n照这样做的话，只有在localhosat：4000本地运行才有效，部署到云端页面会发现图片是无法显示的。\n\n\n\n# **解决方法**\n\n在网上查找了非常多方法之后，终于总结出了适合新手且泛用性强、持久性好的解决思路：\n\n**GitHub自建图床+jsDelivr加速+PicGo图片上传**\n\n图床、jsDelivr的概念及作用可以自行了解，此处不加赘述，另外，PicGo这款软件需提前下载好备用。\n\n\n\n# **具体步骤**\n\n## GitHub新建仓库用作图床\n\n这个步骤在网上教程非常多，此处省略，要注意的是不需要像某些教程所说的克隆到本地，因为后面我们会用PicGo来上传图片，同时要记得复制Token备用。\n\n## PicGo的图床设置\n\n在PicGo的图床设置里选择GitHub图床，示例如图：\n\n![image-20220119221206942](https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220119221206942.png)\n\n仓库名：GitHub账户名/用作图床的仓库名\n\n分支名：默认填main就好\n\nToken：粘贴刚才复制的Token\n\n存储路径：如果图片想放在子文件夹，则填文件夹路径\n\n自定义域名：\n\n```\nhttps://cdn.jsdelivr.net/gh/GitHub用户名/用作图床的仓库名\n```\n\n这个自定义域名，就是主题配置文件里想修改的图片url填的格式。\n\n修改完设置点击确定即可。\n\n## 上传图片\n\n我们点击上传区：\n\n![image-20220119220208590](https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/image-20220119220208590.png)\n\n注意下方链接格式要选择URL，然后拖动我们想要的图片就可以上传了。\n\n上传完成后，我们可以在“相册”里面查看图片并复制url链接，然后回到主题配置文件里面粘贴：\n\n```\navatar:\n    url: https://cdn.jsdelivr.net/gh/MasonM0unt/picbed/touxiang.JPG\n```\n\n至此，我们自定义主题里的图片就完成啦！\n","tags":["学习记录","新手向","博客搭建"]},{"title":"Hello World","url":"/2022-01-13-hello-world.html","content":"记录一个博客的破壳"}]